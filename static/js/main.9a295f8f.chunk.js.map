{"version":3,"sources":["utils/API.js","pages/Main/index.js","App.js","index.js"],"names":["axios","get","Main","useState","employees","setEmployees","filtered","setFiltered","order","setOrder","useEffect","API","then","res","data","results","catch","err","console","log","id","onChange","input","document","querySelector","value","toLowerCase","filteredData","filter","employee","name","first","indexOf","onClick","sorrtedArr","sort","a","b","map","src","picture","medium","last","phone","email","dob","date","login","uuid","App","ReactDOM","render","getElementById"],"mappings":"uQAGe,EACC,WACZ,OAAOA,IAAMC,IAAI,2C,eCkFNC,MAlFf,WAAgB,MAEoBC,mBAAS,IAF7B,mBAEPC,EAFO,KAEIC,EAFJ,OAGkBF,mBAAS,IAH3B,mBAGPG,EAHO,KAGGC,EAHH,OAIYJ,mBAAS,KAJrB,mBAIPK,EAJO,KAIAC,EAJA,KA8Dd,OAvDAC,qBAAU,WAMRC,IAAmBC,MAAK,SAAAC,GACtBR,EAAaQ,EAAIC,KAAKC,SACtBR,EAAYM,EAAIC,KAAKC,YAEtBC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QARzB,IAsDD,gCACE,oBAAIG,GAAG,QAAP,+BACA,uBAAOA,GAAG,SAASC,SA5BJ,WAEnB,IAAMC,EAAQC,SAASC,cAAc,WAAWC,MAAMC,cAEhDC,EAAevB,EAAUwB,QAAO,SAACC,GAAD,OAAcA,EAASC,KAAKC,MAAML,cAAcM,QAAQV,IAAU,KAExGf,EAAYoB,MAuBR,uBAAOP,GAAG,YAAV,SACE,kCACA,+BACE,uCACA,oBAAIa,QAvBK,WACjB,GAAc,MAAVzB,EAAe,CACjB,IAAI0B,EAAa5B,EACjB4B,EAAWC,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEN,KAAKC,MAAML,cAAgBW,EAAEP,KAAKC,MAAML,eAAiB,EAAI,KAC1FnB,EAAY2B,GACZzB,EAAS,SACJ,CACL,IAAIyB,EAAa5B,EACjB4B,EAAWC,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEN,KAAKC,MAAML,cAAgBW,EAAEP,KAAKC,MAAML,cAAgB,GAAK,KAC1FR,QAAQC,IAAIe,GACZ3B,EAAY2B,GACZzB,EAAS,OAYH,kBACA,uCACA,uCACA,wCAnDUH,EAASgC,KAAI,SAACT,GAC9B,OACE,+BACI,6BAAI,qBAAKU,IAAKV,EAASW,QAAQC,WAC/B,+BAAKZ,EAASC,KAAKC,MAAnB,IAA2BF,EAASC,KAAKY,QACzC,6BAAKb,EAASc,QACd,6BAAKd,EAASe,QACd,6BAAKf,EAASgB,IAAIC,SALbjB,EAASkB,MAAMC,kBCpBfC,MANf,WACE,OACE,cAAC,EAAD,KCCJC,IAASC,OAEL,cAAC,EAAD,IAEF5B,SAAS6B,eAAe,W","file":"static/js/main.9a295f8f.chunk.js","sourcesContent":["import axios from \"axios\";\n\n// Gets employee data \nexport default {\n  getEmployees: function() {\n    return axios.get(\"https://randomuser.me/api/?results=200\");\n  }\n};\n","import React, { useEffect, useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport API from \"../../utils/API\";\nimport \"./style.css\";\n\nfunction Main() {\n  // State variable and their functions\n  const [employees, setEmployees] = useState([]);\n  const [filtered, setFiltered] = useState([])\n  const [order, setOrder] = useState(\"A\")\n\n  // On mount for getting api data\n  useEffect(() => {\n    getEmployees();\n  }, [])\n\n  // Gets employee data from api\n  function getEmployees() {\n    API.getEmployees().then(res => {\n      setEmployees(res.data.results);\n      setFiltered(res.data.results);\n    })\n    .catch(err => console.log(err))\n  }\n\n// Creates rows of employees and their data\nconst renderEmployeeRows = () => {\n  const mappedArr = filtered.map((employee) => {\n    return (\n      <tr key={employee.login.uuid}>\n          <td><img src={employee.picture.medium}/></td>\n          <td>{employee.name.first} {employee.name.last}</td>\n          <td>{employee.phone}</td>\n          <td>{employee.email}</td>\n          <td>{employee.dob.date}</td>\n      </tr>\n    );\n  });\n  return mappedArr;\n}\n\n// Search function\nconst handleSearch = () => {\n  //get the input\n  const input = document.querySelector(\"#search\").value.toLowerCase();\n  //filter the employee with the input\n  const filteredData = employees.filter((employee) => employee.name.first.toLowerCase().indexOf(input) > -1);\n  //set the state filtered\n  setFiltered(filteredData);\n}\n\n// Sort function\nconst handleSort = () => {\n  if (order === \"A\") {\n    let sorrtedArr = filtered;\n    sorrtedArr.sort((a, b) => (a.name.first.toLowerCase() > b.name.first.toLowerCase() ? -1 : 1))\n    setFiltered(sorrtedArr);\n    setOrder(\"D\");\n  } else {\n    let sorrtedArr = filtered;\n    sorrtedArr.sort((a, b) => (a.name.first.toLowerCase() > b.name.first.toLowerCase() ? 1 : -1))\n    console.log(sorrtedArr);\n    setFiltered(sorrtedArr);\n    setOrder(\"A\");\n  }\n}\n  // Table header and body for render\n  return (\n    <div>\n      <h1 id=\"title\">Employee Database</h1>\n      <input id=\"search\" onChange={handleSearch}/>\n      <table id=\"employees\">\n        <tbody>\n        <tr>\n          <th>Image</th>\n          <th onClick={handleSort}>Name</th>\n          <th>Phone</th>\n          <th>Email</th>\n          <th>DOB</th>\n        </tr>\n        {renderEmployeeRows()}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default Main;","import './App.css';\nimport Main from \"./pages/Main\"\n\nfunction App() {\n  return (\n    <Main />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  \n    <App />,\n  \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}